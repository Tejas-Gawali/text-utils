{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","About","style2","color","backgroundColor","style1","_useState","useState","_useState2","Object","slicedToArray","mystyle","setmystyle","_useState3","_useState4","btnText","setbtnText","style","aria-labelledby","data-bs-parent","class","TextForm","text","settext","Fragment","heading","onChange","e","console","log","target","value","rows","defaultValue","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","showAlert","message","setTimeout","body","title","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ef54533f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className='container-fluid'>\r\n        <Link className='navbar-brand' to='/'>\r\n          TextUtils\r\n        </Link>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-bs-toggle='collapse'\r\n          data-bs-target='#navbarSupportedContent'\r\n          aria-controls='navbarSupportedContent'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'>\r\n          <span className='navbar-toggler-icon' />\r\n        </button>\r\n        <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n          <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                  <li className='nav-item'>\r\n                      <Link className='nav-link active' aria-current='page' to='/'> Home</Link>\r\n                  </li>\r\n                  <li className='nav-item'>\r\n                      <Link className='nav-link' to='/about'>About</Link>\r\n                  </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}` }>\r\n            <input\r\n              className='form-check-input'\r\n              onClick={props.toggleMode}\r\n              type='checkbox'\r\n              role='switch'\r\n              id='flexSwitchCheckDefault'\r\n            />\r\n            <label\r\n              className='form-check-label '\r\n              htmlFor='flexSwitchCheckDefault'>\r\n              Enable dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n    let style2= {\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    }\r\n    let style1= {\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    }\r\n    const [mystyle, setmystyle] = useState({\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    });\r\n\r\n    const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const toggleStyle=()=>{\r\n        if (mystyle.color==='black') {\r\n            setmystyle(style1);\r\n            setbtnText(\"Enable Light Mode\");\r\n        }\r\n        else{\r\n            (setmystyle(style2));\r\n            setbtnText(\"Enable Dark Mode\");\r\n        }\r\n        \r\n    };\r\n  return (\r\n    <div className='container' style={mystyle}>\r\n      <h1 className='my-3'>About Us</h1>\r\n      <div className='accordion' id='accordionExample' style={mystyle}>\r\n        <div className='accordion-item'>\r\n          <h2 className='accordion-header' id='headingOne'>\r\n            <button\r\n              className='accordion-button'\r\n              style={mystyle}\r\n              type='button'\r\n              data-bs-toggle='collapse'\r\n              data-bs-target='#collapseOne'\r\n              aria-expanded='true'\r\n              aria-controls='collapseOne'>\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id='collapseOne'\r\n            style={mystyle}\r\n            className='accordion-collapse collapse show'\r\n            aria-labelledby='headingOne'\r\n            data-bs-parent='#accordionExample'>\r\n            <div className='accordion-body'>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='accordion-item'>\r\n          <h2 className='accordion-header' id='headingTwo'>\r\n            <button\r\n              className='accordion-button collapsed'\r\n              style={mystyle}\r\n              type='button'\r\n              data-bs-toggle='collapse'\r\n              data-bs-target='#collapseTwo'\r\n              aria-expanded='false'\r\n              aria-controls='collapseTwo'>\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id='collapseTwo'\r\n            className='accordion-collapse collapse'\r\n            style={mystyle}\r\n            aria-labelledby='headingTwo'\r\n            data-bs-parent='#accordionExample'>\r\n            <div className='accordion-body'>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='accordion-item'>\r\n          <h2 className='accordion-header' id='headingThree'>\r\n            <button\r\n              className='accordion-button collapsed'\r\n              style={mystyle}\r\n              type='button'\r\n              data-bs-toggle='collapse'\r\n              data-bs-target='#collapseThree'\r\n              aria-expanded='false'\r\n              aria-controls='collapseThree'>\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id='collapseThree'\r\n            className='accordion-collapse collapse'\r\n            style={mystyle}\r\n            aria-labelledby='headingThree'\r\n            data-bs-parent='#accordionExample'>\r\n            <div className='accordion-body'>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n      <button onClick={toggleStyle} type=\"button\" class=\"btn btn-primary\">{btnText}</button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, settext] = useState(\"\");\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Upper Case clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        // props.showAlert(\"Text Converted to uppercase\",\"success\")\r\n    };\r\n\r\n    const handleLowClick = ()=>{\r\n      console.log(\"Upper Case clicked\" + text);\r\n      let newtext = text.toLowerCase();\r\n      settext(newtext);\r\n      // props.showAlert(\"Text Converted to lowercase\",\"success\")\r\n    };\r\n    const handleClear = ()=>{\r\n    \r\n      let newtext = \"\";\r\n      settext(newtext);\r\n      // props.showAlert(\"Text is cleared\",\"success\")\r\n    };\r\n\r\n    const handleCopy=()=>{\r\n      var text = document.getElementById('my-box');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      // props.showAlert(\"Text has been copied to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleSpaces=()=>{\r\n      let newtext = text.split(/[ ]+/);\r\n      settext(newtext.join(\" \"));\r\n      // props.showAlert(\"Text is evenly spaced now\",\"success\")\r\n    }\r\n\r\n    const handleOnChange = (e)=>{\r\n      settext();\r\n      console.log(\"handleOnChange\");\r\n      settext(e.target.value);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <div className='Container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} className=\"form-control\" id=\"my-box\" onChange={handleOnChange} value={text} rows={8} defaultValue={\"\"} />\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>ClearText</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpaces}>Remove Extra Spaces</button>\r\n      \r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n      <h2>Your Text summary</h2>\r\n      <p>{text.length!==0?text.split(\" \").length : 0}  words  and {text.length} characters</p>\r\n      <p>{text.length!==0?0.008 * text.split(\" \").length:0} minutes  to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Write something in the above text-box to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport About from './components/About';\nimport TextForm from './components/TextForm'\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      }, 500);\n  }\n\n  const toggleMode=()=>{\n    if (mode==='light') {\n      setmode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark mode enabled\", \"success\");\n      document.title=\"TextUtils-Dark mode\";\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode enabled\", \"primary\");\n      document.title=\"TextUtils-Light mode\";\n    }\n    \n    \n  }\n  return (\n    <>\n    <Router>\n    <Navbar mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n        {/* <TextForm showAlert={showAlert} heading=\"Enter Text to Analyze\" mode={mode}/> */}\n    <Routes>\n      <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter Text to Analyze\" mode={mode}/>}/>\n      <Route exact path=\"/about\" element={<About mode={mode}/>}/>\n      \n    </Routes>\n    \n    \n    </div>\n    </Router>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}